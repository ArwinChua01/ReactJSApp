{"version":3,"sources":["components/layout/header.js","components/TodoItem.js","components/Todos.js","AddTodo.js","App.js","serviceWorker.js","index.js"],"names":["headerStyle","background","color","textAlign","padding","Header","react_default","a","createElement","style","className","TodoItem","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getStyle","borderBottom","textDecoration","props","todo","completed","inherits","createClass","key","value","_this$props$todo","id","title","type","onChange","markComplete","bind","onClick","delTodo","btnStyle","Component","border","borderRadius","cursor","float","Todos","todos","map","components_TodoItem","AddTodo","state","onSubmit","e","preventDefault","addTodo","setState","target","display","name","flex","placeholder","App","uuid","v4","toConsumableArray","filter","newTodo","header","src_AddTodo","components_Todos","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.207c02b5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header style={headerStyle}>\r\n            <h1 className=\"margin\">Todo List</h1>\r\n            <p className=\"margin\">by Arwin Chua</p>\r\n        </header>\r\n    )\r\n    \r\n}\r\n\r\nconst headerStyle = {\r\n    background: 'rgb(255,140,0)',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    padding: '10px'\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nexport class TodoItem extends Component{\r\n    getStyle = () => {\r\n     return {\r\n         background: '#f4f4f4',\r\n         padding: '10px',\r\n         borderBottom: '1px #ccc dotted',\r\n         textDecoration: this.props.todo.completed ?\r\n         'line-through' : 'none'\r\n     }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { id, title } = this.props.todo;\r\n        return  (\r\n           <div style={this.getStyle()}>\r\n<p>\r\n<input type=\"checkbox\" onChange={this.props.markComplete.bind(this, id)}/> {''}\r\n{ title }</p>\r\n<button onClick={this.props.delTodo.bind(this, id)} style={btnStyle}>x</button>\r\n\r\n           </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n//Props\r\nTodoItem.propTypes = {\r\n    todo: PropTypes.object.isRequired\r\n}\r\n\r\nconst btnStyle= {\r\n    background: '#ff0000',\r\n    color: '#fff',\r\n    border: 'none',\r\n    padding: '5px 9px',\r\n    borderRadius: '50%',\r\n    cursor: 'pointer',\r\n    float: 'right'\r\n}\r\n\r\nexport default TodoItem;","import React, { Component } from 'react';\r\nimport TodoItem from './TodoItem';\r\nimport PropTypes from 'prop-types';\r\nclass Todos extends Component{\r\n\r\n    render() {\r\n        return this.props.todos.map((todo) => (\r\n           <TodoItem  key={todo.id} todo={todo}\r\n           markComplete={this.props.markComplete} delTodo={this.props.delTodo}\r\n           />\r\n        ));\r\n    }\r\n}\r\n\r\n//Props\r\nTodos.propTypes = {\r\n    todos: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Todos;","import React, { Component } from 'react'\r\n\r\nexport class AddTodo extends Component{\r\nstate = {\r\n    title: ''\r\n}\r\n\r\nonSubmit = (e) =>{\r\n    e.preventDefault();\r\n    this.props.addTodo(this.state.title);\r\n    this.setState({title: ''});\r\n}\r\n\r\nonChange = (e) => this.setState({title: e.target.value});\r\n\r\n    render() {\r\n        return(\r\n    <form onSubmit={this.onSubmit} style={{display: 'flex'}}>\r\n        <input\r\n      type=\"text\"\r\n      name=\"title\"\r\n      style={{flex:'10', padding: '5px'}}\r\n      placeholder=\"Add Todo ...\"   \r\n      value={this.state.title}\r\n      onChange={this.onChange}\r\n        />\r\n   <input\r\n   type=\"submit\"\r\n   value=\"Submit\"\r\n   className=\"btn\"\r\n   style={{flex:'1'}}\r\n   />\r\n\r\n   </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddTodo","import React, { Component } from 'react';\nimport Header from './components/layout/header'\nimport Todos from './components/Todos';\nimport AddTodo from './AddTodo';\nimport uuid from 'uuid';\nimport './App.css';\n\nclass App extends Component {\nstate = {\ntodos: [{\n  id: uuid.v4(),\n  title: 'Go to school',\n  completed: false\n},\n\n{\n  id: uuid.v4(),\n  title: 'Develop a website',\n  completed: false\n},\n\n{\n  id: uuid.v4(),\n  title: 'Work with pleasure',\n  completed: false\n}\n]\n\n}\n\nmarkComplete = (id) =>{\n  this.setState({todos: this.state.todos.map(todo =>{\nif(todo.id === id){\n  todo.completed = !todo.completed\n}\nreturn todo;\n\n  }) });\n}\n\ndelTodo = (id) => {\n  this.setState({todos: [...this.state.todos.filter(todo => todo.id\n    !== id)]})\n}\n\naddTodo = (title) =>{\n  const newTodo = {\n    id: uuid.v4(),\n    title,\n    completed: false\n  }\n  this.setState({todos: [...this.state.todos, newTodo]});\n}\n\n  render() {\n   \n    return (\n      <div className=\"App\">\n\n<div className=\"container\">\n<Header/>\n      <AddTodo addTodo={this.addTodo} />\n    <Todos todos={this.state.todos} markComplete={this.markComplete} \n    delTodo={this.delTodo} />\n</div>\n\n     \n      </div>\n    );  \n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}